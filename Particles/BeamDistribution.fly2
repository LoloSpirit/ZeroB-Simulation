function IonType (name, mass, charge, fraction)
    return {
        name = name,
        mass = mass,
        charge = charge,
        fraction = fraction
    }
end

local spawnregion_length = 20 -- mm
local ion_types = {
    IonType('Ar+', 39.948, 1, 2.64),
    IonType('Ar2+', 39.948, 2, 1.89)
}
local amount_multiplier = 2000
local beam_center = 11 -- mm
local fwhm = 1.95 -- mm
local ion_kinetic_energy = 1/40 -- eV

-- build the particle table type by type
local t = {coordinates = 0}

for k, ion_type in ipairs(ion_types) do
    local num_ions = amount_multiplier * ion_type.fraction
    t[#t+1] = standard_beam {
        n = num_ions,
        tob = 0,
        mass = ion_type.mass,
        charge = ion_type.charge,
        x = gaussian_distribution {
          mean = beam_center,
          fwhm = fwhm
        },
        y = uniform_distribution {
          min = -spawnregion_length/2,
          max = spawnregion_length/2
        },
        z = 0,
        ke = ion_kinetic_energy,
        cwf = 1,
        color = k,
        direction = cone_direction_distribution {
          axis = vector(1, 0, 0),
          half_angle = 180, -- 360 degrees - random
          fill = true
        }
    }
end

particles(t)
